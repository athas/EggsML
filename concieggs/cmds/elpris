#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import urllib.request
from datetime import datetime, timedelta
import json

# Inklusiv moms
ELAFGIFT = 0.9513
ENERGINET = 0.15625


def is_summer(month):
    return 4 <= month <= 9


# Inklusiv moms
def tarif(t):
    # peak
    if 17 <= t.hour < 21:
        if is_summer(t.month):
            return 0.4760
        else:
            return 1.0985
    # high
    elif 6 <= t.hour < 17:
        if is_summer(t.month):
            return 0.1831
        else:
            return 0.3661
    else:
        return 0.1220


def pris(spotpris, t):
    spotpris_med_moms = spotpris * 1.25 / 1000
    tariffer = tarif(t) + ENERGINET

    return {
        "t": t,
        "total": ELAFGIFT + tariffer + spotpris_med_moms,
        "spot": spotpris_med_moms,
        "tariffer": tariffer,
        "afgifter": ELAFGIFT,
    }


def priser(start, end):
    current_hour_string = start.strftime("%Y-%m-%dT%H:00")
    end_hour_string = end.strftime("%Y-%m-%dT%H:00")

    url = f"https://api.energidataservice.dk/dataset/Elspotprices?offset=0&start={current_hour_string}&end={end_hour_string}&filter=%7B%22PriceArea%22:[%22DK2%22]%7D&sort=HourUTC%20ASC"
    res = json.load(urllib.request.urlopen(url))
    return [
        pris(r["SpotPriceDKK"], datetime.fromisoformat(r["HourDK"]))
        for r in res["records"]
    ]


def elpris_detalje(pris):
    total_pris = pris["total"]
    spot_pris = pris["spot"]
    tariffer = pris["tariffer"]
    afgifter = pris["afgifter"]

    return f"Elprisen lige nu er {total_pris:.2f} kr. inklusiv moms.\nHeraf spotpris: {spot_pris:.2f} kr.\n      tariffer: {tariffer:.2f} kr.\n      elafgift: {afgifter:.2f} kr.\n"


def elpris_linje(pris):
    tid = pris["t"].strftime("%H:00")
    total = pris["total"]
    return f"{tid}: {total:.2f} kr."


current_time = datetime.now().astimezone()

ps = priser(current_time, current_time + timedelta(hours=12))
print(elpris_detalje(ps[0]))
for p in ps[1:]:
    print(elpris_linje(p))
