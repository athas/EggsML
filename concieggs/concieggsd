#!/bin/sh
#
# Original character DO NOT STEAL

set -e # Die on error
set -f # No globbing

setTrap() {
    # Kill all children when we quit, and cleanup after eggsmld.
    trap 'fifo_cleanup; eggsmld_cleanup; exit' INT QUIT TERM
    trap 'fifo_cleanup; eggsmld_cleanup; cleanup' EXIT
}

setTrap

fifo_cleanup() {
    rm -f "$tailfifo" "$ticksfifo"
}

eggsmld_cleanup() {
    # Try to remove its socket.
    rm -f $EGGS_DAEMON_SOCKET
}

cleanup() {
    kill 0
}

# Try to figure out where this executable resides.
dir=$(readlink -f $(dirname $0))

# Go there.
cd $dir

# Load the configuration file.
cfg=$dir/concieggs.conf
. $cfg

# Export some bot information.
export CONCIEGGS_DIR=$dir
export CONCIEGGS_IRC_DIR=$irc_dir
export CONCIEGGS_DB_DIR=$dir/db
export CONCIEGGS_LIB_DIR=$dir/eggspi
export CONCIEGGS_DEFAULT_NAME=$irc_username
export CONCIEGGS_DEFAULT_CHANNEL=$irc_channel
export CONCIEGGS_ERROR_CHANNEL=$irc_error_channel
export CONCIEGGS_HOME="$HOME"

# Export some lunch information.
export EGGS_DIR=$dir/..
export EGGS_LIB_DIR=$EGGS_DIR/eggslib

# Export where to find eggsmld (we'll start it real soon now).
export EGGS_DAEMON_SOCKET=$CONCIEGGS_DIR/eggsmld.socket

# Import the concieggs library.
export PATH=$CONCIEGGS_LIB_DIR:$PATH

# Java is also something good
export PATH=/usr/local/jdk-1.8.0/bin:$PATH
export CLASSPATH=$CONCIEGGS_DB_DIR/compiled-cache:$CLASSPATH

# We also use Python!
export PYTHONPATH=$CONCIEGGS_LIB_DIR:$PYTHONPATH

# And Perl!
export PERL5LIB="$CONCIEGGS_LIB_DIR/perleggs:$HOME/perl5/lib/perl5:$PERL5LIB";

# And rash!
export RASH_STATE_DIR=$CONCIEGGS_DB_DIR

# And Rust!
export PATH=$HOME/.cargo/bin:$PATH

# Let's have some Emacs Lisp as well.
get_loadpath=$(mktemp)
(echo "(princ (mapconcat 'identity load-path \":\"))"; echo "(kill-emacs 0)") > $get_loadpath
export EMACSLOADPATH=$(emacs --quick --script $get_loadpath):$CONCIEGGS_LIB_DIR/emeggslisp
rm $get_loadpath

# Hack for UTF-8 handling in GHC on OpenBSD
export HS_ENCODING=UTF-8

say "Interacting with concieggs_irc in $irc_dir."

# Let all eggsml users touch our stuff.
umask 002

ircloop () {
    while true; do
        # Connect to IRC.
        sic -h irc.libera.chat -n "$irc_username" || true
        say "IRC crashed - reconnecting in a few seconds." >&2
        # Sleep a few seconds before trying again.
        sleep 4
    done
}

eventprocessor () {
    while true; do
        # Run commands from lines.
        gawk -f $dir/irc_event_reader.awk || true
        # We might terminate gawk if we wish to restart the eventprocessor.
        say "gawk was terminated - reconnecting in a second." >&2
        # Sleep a second before trying again.
        sleep 1
    done
}

ticks() {
    while true; do
        echo tick
        sleep 10
    done
}

throttle() {
    gawk -f $dir/throttle.awk
}

outfile=$irc_dir/out

# Make sure the outfile exists.
touch "$outfile" 2>/dev/null || true

# Start eggsmld.
$EGGS_DIR/eggslib/eggsmld.py $EGGS_DIR/slashdotfrokost $EGGS_DAEMON_SOCKET &

# Handle the inputs.
tailfifo="$irc_dir/tail"
mkfifo "$tailfifo"
ticksfifo="$irc_dir/ticks"
mkfifo "$ticksfifo"

(tail -f -n 0 "$outfile" > "$tailfifo") &
(ticks > "$ticksfifo") &

# Tie the loops together.
parcat "$tailfifo" "$ticksfifo" | \
    eventprocessor | \
    tee /dev/stderr | \
    throttle | \
    ircloop >> "$outfile"
